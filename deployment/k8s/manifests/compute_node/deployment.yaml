apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cosmollm-compute-{{ID}}-{{COMPUTE_ID}}
    deploymentId: {{ID}}
  name: cosmollm-compute-{{ID}}-{{COMPUTE_ID}}
spec:
  selector:
    matchLabels:
      app: cosmollm-compute-{{ID}}-{{COMPUTE_ID}}
  template:
    metadata:
      labels:
        app: cosmollm-compute-{{ID}}-{{COMPUTE_ID}}
    spec:
      initContainers:
        - name: init-app-data
          image: {{IMAGE}}
          imagePullPolicy: Always
          command: [ 'sh', '-c', 'if [ -z "$(ls -A /shared-app)" ]; then cp -a /app/. /shared-app/; fi' ]
          volumeMounts:
            - name: experiment-volume
              mountPath: /shared-app
      containers:
        - name: cosmollm-compute
          image: {{IMAGE}}
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              protocol: TCP
          env:
            - name: DEPLOYMENT_TYPE
              value: "compute"
          envFrom:
            - configMapRef:
                name: cosmollm-global-config-{{ID}}
            - secretRef:
                name: cosmollm-secrets-{{ID}}
          volumeMounts:
            - mountPath: /app
              name: experiment-volume
          resources:
            limits:
              cpu: "{{CPU_LIMIT}}"
              memory: "{{MEMORY_LIMIT}}"
            requests:
              cpu: "{{CPU_REQUEST}}"
              memory: "{{MEMORY_REQUEST}}"
      volumes:
        - name: experiment-volume
          persistentVolumeClaim:
            claimName: cosmollm-experiment-volume-{{ID}}

      dnsPolicy: ClusterFirst
      restartPolicy: Always
